---
services:

  mantrae:
    image: ghcr.io/mizuchilabs/mantrae:latest
    container_name: mantrae
    volumes:
      - ./mantrae:/data
    environment:
      - TRAEKIF_URL=${TRAEKIF_URL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - SECRET=${SECRET}
      - HOST=${HOST}
    labels:
      - traefik.enable=true
      - traefik.http.routers.mantrae.rule=Host(`mantrae.${HOST}`)
      - traefik.http.services.mantrae.loadbalancer.server.port=3000
    networks:
      - frontend
    restart: unless-stopped

  mantrae-agent:
    image: ghcr.io/mizuchilabs/mantrae-agent:latest
    container_name: mantrae-agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TOKEN=${MANTRAE_AGENT_TOKEN}
    restart: unless-stopped

  traefik:
    image: traefik:v3.1.5
    container_name: traefik
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/run/docker.sock:ro
      - ./config/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./certs/:/var/traefik/certs/:rw
      - ./traefik:/etc/traefik
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - OWNER_EMAIL=${OWNER_EMAIL}
      - HOST=${HOST}
      - MANTAE_PROFILE=${MANTAE_PROFILE}
    networks:
      - frontend
    command:
      - --providers.http.endpoint=http://mantrae:3000/api/${MANTAE_PROFILE}
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.${HOST}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.entrypoints=websecure
    restart: unless-stopped

networks:
  frontend:
    external: true  # <-- (Optional) Change this to false if you want to create a new network
